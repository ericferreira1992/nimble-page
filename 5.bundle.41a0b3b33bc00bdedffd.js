(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{131:function(e,a){e.exports="<div class=cli-1x-commands-page> <h1> {{getText('TITLE')}} </h1> <p class=mt-3 [html]=\"getText('TEXT_1')\"></p> <pre class=language-shell>\n        <code>\n$ nb\n        </code>\n    </pre> <p [html]=\"getText('TEXT_2')\"></p> <section> <h4> <a href=#generate name=generate [html]=\"getText('GENERATE.TITLE')\"></a> </h4> <p [html]=\"getText('GENERATE.TEXT_1')\" class=mb-3></p> <p [html]=\"getText('GENERATE.TEXT_2')\"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span style=color:gray>(Use arrow keys)</span>\n<span style=color:#0ff>❯ Generate </span>\n  <span style=color:#afafaf> Run server</span>\n  <span style=color:#afafaf> Run build </span>\n  <span style=color:#afafaf> Exit </span>\n            </code>\n        </pre> <p [html]=\"getText('GENERATE.TEXT_3')\"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:gray>(Use arrow keys)</span>\n<span class=pl-3>Page</span>\n<span class=pl-3>Dialog</span>\n<span class=pl-3>Directive</span>\n<span class=pl-3>Service</span>\n            </code>\n        </pre> <section class=pl-3> <h5> <a href=#generate-page name=generate-page [html]=\"getText('GENERATE.PAGE.TITLE')\"></a> </h5> <p [html]=\"getText('GENERATE.PAGE.TEXT_1')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:gray>(Use arrow keys)</span>\n<span style=color:#0ff>❯ Page</span>\n  <span style=color:#afafaf>Dialog</span>\n  <span style=color:#afafaf>Directive</span>\n  <span style=color:#afafaf>Service</span>\n  <span style=color:#afafaf>Guard</span>\n                </code>\n            </pre> <p class=mt-1 [html]=\"getText('GENERATE.PAGE.TEXT_2')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:#0ff>Page</span>\n? What is path and name? <span style=color:#afafaf>(ex.: pages/home)</span> <span class=terminal-io></span>\n                </code>\n            </pre> <p class=mt-1 [html]=\"getText('GENERATE.PAGE.TEXT_3')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:#0ff>Page</span>\n? What is path and name? <span style=color:#afafaf>(ex.: pages/home)</span> <span style=color:#0ff>pages/example</span>\n<span style=color:#8fbc8f>CREATED:</span> src/app/pages/example/example.page.html\n<span style=color:#8fbc8f>CREATED:</span> src/app/pages/example/example.page.scss\n<span style=color:#8fbc8f>CREATED:</span> src/app/pages/example/example.page.ts\n                </code>\n            </pre> </section> <section class=pl-3> <h5> <a href=#generate-dialog name=generate-dialog [html]=\"getText('GENERATE.DIALOG.TITLE')\"></a> </h5> <p [html]=\"getText('GENERATE.DIALOG.TEXT_1')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:gray>(Use arrow keys)</span>\n    <span style=color:#afafaf>Page</span>\n<span style=color:#0ff>❯ Dialog</span>\n    <span style=color:#afafaf>Directive</span>\n    <span style=color:#afafaf>Service</span>\n    <span style=color:#afafaf>Guard</span>\n                </code>\n            </pre> <p class=mt-1 [html]=\"getText('GENERATE.DIALOG.TEXT_2')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:#0ff>Dialog</span>\n? What is path and name? <span style=color:#afafaf>(ex.: dialogs/confirmation)</span> <span class=terminal-io></span>\n                </code>\n            </pre> <p class=mt-1 [html]=\"getText('GENERATE.DIALOG.TEXT_3')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:#0ff>Page</span>\n? What is path and name? <span style=color:#afafaf>(ex.: dialogs/confirmation)</span> <span class=ml-1 style=color:#0ff>dialogs/example</span>\n<span style=color:#8fbc8f>CREATED:</span> src/app/dialogs/example/example.dialog.html\n<span style=color:#8fbc8f>CREATED:</span> src/app/dialogs/example/example.dialog.scss\n<span style=color:#8fbc8f>CREATED:</span> src/app/dialogs/example/example.dialog.ts\n                </code>\n            </pre> </section> <section class=pl-3> <h5> <a href=#generate-directive name=generate-directive [html]=\"getText('GENERATE.DIRECTIVE.TITLE')\"></a> </h5> <p [html]=\"getText('GENERATE.DIRECTIVE.TEXT_1')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:gray>(Use arrow keys)</span>\n  <span style=color:#afafaf>Page</span>\n  <span style=color:#afafaf>Dialog</span>\n<span style=color:#0ff>❯ Directive</span>\n  <span style=color:#afafaf>Service</span>\n  <span style=color:#afafaf>Guard</span>\n                </code>\n            </pre> <p class=mt-1 [html]=\"getText('GENERATE.DIRECTIVE.TEXT_2')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:#0ff>Directive</span>\n? What is path and name? <span style=color:#afafaf>(ex.: directives/tooltip)</span> <span class=terminal-io></span>\n                </code>\n            </pre> <p class=mt-1 [html]=\"getText('GENERATE.DIRECTIVE.TEXT_3')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:#0ff>Directive</span>\n? What is path and name? <span style=color:#afafaf>(ex.: directives/tooltip)</span> <span style=color:#0ff>directives/example</span>\n<span style=color:#8fbc8f>CREATED:</span> src/app/directives/example/example.directive.html\n<span style=color:#8fbc8f>CREATED:</span> src/app/directives/example/example.directive.scss\n<span style=color:#8fbc8f>CREATED:</span> src/app/directives/example/example.directive.ts\n                </code>\n            </pre> </section> <section class=pl-3> <h5> <a href=#generate-directive name=generate-directive [html]=\"getText('GENERATE.DIRECTIVE.TITLE')\"></a> </h5> <p [html]=\"getText('GENERATE.DIRECTIVE.TEXT_1')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:gray>(Use arrow keys)</span>\n  <span style=color:#afafaf>Page</span>\n  <span style=color:#afafaf>Dialog</span>\n<span style=color:#0ff>❯ Directive</span>\n  <span style=color:#afafaf>Service</span>\n  <span style=color:#afafaf>Guard</span>\n                </code>\n            </pre> <p class=mt-1 [html]=\"getText('GENERATE.DIRECTIVE.TEXT_2')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:#0ff>Directive</span>\n? What is path and name? <span style=color:#afafaf>(ex.: directives/tooltip)</span> <span class=terminal-io></span>\n                </code>\n            </pre> <p class=mt-1 [html]=\"getText('GENERATE.DIRECTIVE.TEXT_3')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:#0ff>Directive</span>\n? What is path and name? <span style=color:#afafaf>(ex.: directives/tooltip)</span> <span style=color:#0ff>directives/example</span>\n<span style=color:#8fbc8f>CREATED:</span> src/app/directives/example.directive.ts\n                </code>\n            </pre> </section> <section class=pl-3> <h5> <a href=#generate-service name=generate-service [html]=\"getText('GENERATE.SERVICE.TITLE')\"></a> </h5> <p [html]=\"getText('GENERATE.SERVICE.TEXT_1')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:gray>(Use arrow keys)</span>\n    <span style=color:#afafaf>Page</span>\n    <span style=color:#afafaf>Dialog</span>\n    <span style=color:#afafaf>Directive</span>\n<span style=color:#0ff>❯ Service</span>\n    <span style=color:#afafaf>Guard</span>\n                </code>\n            </pre> <p class=mt-1 [html]=\"getText('GENERATE.SERVICE.TEXT_2')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:#0ff>Service</span>\n? What is path and name? <span style=color:#afafaf>(ex.: directives/tooltip)</span> <span class=terminal-io></span>\n                </code>\n            </pre> <p class=mt-1 [html]=\"getText('GENERATE.SERVICE.TEXT_3')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:#0ff>Service</span>\n? What is path and name? <span style=color:#afafaf>(ex.: services/tooltip)</span> <span style=color:#0ff>services/example</span>\n<span style=color:#8fbc8f>CREATED:</span> src/app/services/example.service.ts\n                </code>\n            </pre> </section> <section class=pl-3> <h5> <a href=#generate-guard name=generate-guard [html]=\"getText('GENERATE.GUARD.TITLE')\"></a> </h5> <p [html]=\"getText('GENERATE.GUARD.TEXT_1')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:gray>(Use arrow keys)</span>\n  <span style=color:#afafaf>Page</span>\n  <span style=color:#afafaf>Dialog</span>\n  <span style=color:#afafaf>Directive</span>\n  <span style=color:#afafaf>Service</span>\n<span style=color:#0ff>❯ Guard</span>\n                </code>\n            </pre> <p class=mt-1 [html]=\"getText('GENERATE.GUARD.TEXT_2')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:#0ff>Guard</span>\n? What is path and name? <span style=color:#afafaf>(ex.: route-guards/auth)</span> <span class=terminal-io></span>\n                </code>\n            </pre> <p class=mt-1 [html]=\"getText('GENERATE.GUARD.TEXT_3')\"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span>\n? Which what do you want to generate? <span style=color:#0ff>Guard</span>\n? What is path and name? <span style=color:#afafaf>(ex.: route-guards/auth)</span> <span style=color:#0ff>route-guards/auth</span>\n<spa class=pr-1 n style=color:#8fbc8f>CREATED: src/app/route-guards/auth.guard.ts\n                </spa></code>\n            </pre> </section> </section> <section> <h4> <a href=#server name=server [html]=\"getText('SERVER.TITLE')\"></a> </h4> <p [html]=\"getText('SERVER.TEXT_1')\"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span style=color:gray>(Use arrow keys)</span>\n  <span style=color:#afafaf>Generate </span>\n<span style=color:#0ff>❯ Run server</span>\n  <span style=color:#afafaf>Run build </span>\n  <span style=color:#afafaf>Exit </span>\n            </code>\n        </pre> <p [html]=\"getText('SERVER.TEXT_2')\"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Run server</span>\t\n❯ Nimble project is running at <span style=color:#ff0>http://0.0.0.0:8090/</span> <span style=color:gray>(open in your browser)</span>\n❯ Environment from: <span style=color:#ff0>src/environments/env.local</span>\n\n<span style=color:#0ff>❯ Await, starting the server...</span>\n            </code>\n        </pre> </section> <section> <h4> <a href=#build name=build [html]=\"getText('BUILD.TITLE')\"></a> </h4> <p [html]=\"getText('BUILD.TEXT_1')\"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span style=color:gray>(Use arrow keys)</span>\n  <span style=color:#afafaf>Generate </span>\n  <span style=color:#afafaf>Run server</span>\n<span style=color:#0ff>❯ Run build</span>\n  <span style=color:#afafaf>Exit </span>\n            </code>\n        </pre> <p [html]=\"getText('BUILD.TEXT_2')\"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Run build</span>\n? Select the environment to be used: <span style=color:gray>(Use arrow keys)</span>\n<span style=color:#0ff>❯ local</span>\n  <span style=color:#afafaf>dev</span>\n  <span style=color:#afafaf>prod</span>\n            </code>\n        </pre> <p [html]=\"getText('BUILD.TEXT_3')\"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Run build</span>\n? Select the environment to be used: <span style=color:#0ff>local</span>\n\n❯ Environment from: <span style=color:#ff0>src/environments/env.local</span>\n<span style=color:#0ff>❯ Await, starting the server...</span>\n\n<span style=color:#8fbc8f>✔ Compiled successfully!</span>\n\n❯ Directory where the build is: <span style=color:#ff0>your-project/build</span>\n            </code>\n        </pre> <p [html]=\"getText('BUILD.TEXT_4')\"></p> </section> </div>"},132:function(e,a,n){},58:function(e,a,n){"use strict";n.r(a),n.d(a,"Cli1xCommandsPage",(function(){return p}));var s=n(84),t=n(24),l=function(e,a,n,s){var t,l=arguments.length,o=l<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,a,n,s);else for(var p=e.length-1;p>=0;p--)(t=e[p])&&(o=(l<3?t(o):l>3?t(a,n,o):t(a,n))||o);return l>3&&o&&Object.defineProperty(a,n,o),o},o=function(e,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,a)};let p=(()=>{let e=class extends s.a{constructor(e){super(),this.lang=e}getText(e){return this.lang.get("DOC.1x.CONTENT.CLI.INTERACTIVE_COMMANDS."+e)}onEnter(){}onExit(){}};return e=l([Object(s.b)({template:n(131),style:n(132),title:"CLI / Interactive commands - Nimble"}),o("design:paramtypes",[t.a])],e),e})()},84:function(e,a,n){"use strict";n.d(a,"a",(function(){return s.a})),n.d(a,"b",(function(){return r}));var s=n(19);class t{constructor(e){Object.assign(this,e)}}class l{constructor(e){this.description="",this.keywords="",this.og={},Object.assign(this,e),this.og&&(this.og=new t(this.og))}}class o{constructor(e){this.template="",this.style="",this.title="",this.meta={},Object.assign(this,e),this.meta&&(this.meta=new l(this.meta))}}var p=n(3);n(20);function r(e){return function(a){return e=new o(e),Object.assign(a.prototype,e),Reflect.defineMetadata(p.a,!0,a),a}}}}]);