(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{113:function(e,t){e.exports='<div class=example-dialog> <h3>Example</h3> <p>example-dialog works!</p> <p class="text-center pt-2"> <a (click)=dialogRef.close()>Fechar</a> </p> </div>'},114:function(e,t,n){},115:function(e,t){e.exports="<div class=framework-1x-dialogs-page> <h1> {{getText('TITLE')}} </h1> <p class=\"text-justify mt-2\"> {{getText('TEXT_1')}} </p> <p class=\"text-justify mt-2\"> {{getText('TEXT_2')}} <a href=doc/1x/cli/commands#generate-dialog>{{lang.get('GLOBAL.HERE')}}</a>. </p> <section class=mb-1> <h4> <a href=#structure name=structure> {{getText('STRUCTURE.TITLE')}} </a> </h4> <p class=mb-3 [html]=\"getText('STRUCTURE.TEXT_1')\"></p> <p class=mt-1 [html]=\"getText('STRUCTURE.TEXT_2')\"></p> <pre>\n            <code class=language-html>\n&lt;div class=\"example-dialog\"&gt;\n    &lt;h3&gt;Exampe&lt;/h3&gt;\n    example-dialog works!\n\n    &lt;a (click)=\"dialogRef.close()\"&gt;Fechar&lt;/a&gt;\n&lt;/div&gt;\n            </code>\n        </pre> <p class=mt-2 [html]=\"getText('STRUCTURE.TEXT_3')\"></p> <pre>\n            <code class=language-css>\n.example-dialog {\n}\n            </code>\n        </pre> <p class=mt-2 [html]=\"getText('STRUCTURE.TEXT_4')\"></p> <pre>\n            <code class=language-javascript>\nimport { Dialog, PrepareDialog, DIALOG_REF, DialogRef } from '@nimble-ts/core/dialog';\nimport { Inject } from '@nimble-ts/core/inject';\n\n@PrepareDialog({\n    template: require('./example.dialog.html'),\n    style: require('./example.dialog.scss')\n})\nexport class ExampleDialog extends Dialog {\n\n    constructor(\n        @Inject(DIALOG_REF) public dialogRef: DialogRef&lt;ExampleDialog&gt;\n    ) {\n        super();\n    }\n\n    onOpen() {\n    }\n\n    onClose() {\n    }\n}\n            </code>\n        </pre> <h6 class=\"mt-2 mb-1 border-0\" [html]=\"getText('STRUCTURE.EXAMPLE.TITLE')\"></h6> <button class=btn (click)=openExampleDialog()> <span>{{getText('STRUCTURE.EXAMPLE.TEXT')}}</span> </button> </section> <section class=mb-1> <h4> <a href=#life-clycle name=life-clycle> {{getText('LIFE_CYCLE.TITLE')}} </a> </h4> <p [html]=\"getText('LIFE_CYCLE.TEXT_1')\"></p> <p class=mt-4 [html]=\"getText('LIFE_CYCLE.TEXT_2')\"></p> <p class=mt-2 [html]=\"getText('LIFE_CYCLE.TEXT_3')\"></p> <p class=mt-2 [html]=\"getText('LIFE_CYCLE.TEXT_4')\"></p> <p class=mt-2 [html]=\"getText('LIFE_CYCLE.TEXT_5')\"></p> </section> <section class=mb-1> <h4> <a href=#how-to-use name=how-to-use> {{getText('HOW_USE.TITLE')}} </a> </h4> <p [html]=\"getText('HOW_USE.TEXT_1')\"></p> <section class=\"mt-5 mb-1\"> <h5 class=\"border-0 mb-0\"> {{getText('HOW_USE.OPEN.TITLE')}} </h5> <p [html]=\"getText('HOW_USE.OPEN.TEXT')\"></p> <pre>\n                <code class=language-javascript>\nimport { Page, PreparePage } from '@nimble-ts/core/page';\nimport { ExampleDialog } from 'src/app/dialogs/example/example.dialog';\n\n@PreparePage({\n    template: require('./example.page.html'),\n    style: require('./example.page.scss')\n})\nexport class ExamplePage extends Page {\n\n    constructor(\n        private dialog: DialogBuilder\n    ) {\n        super();\n    }\n\n    public openMyDialog() {\n        this.dialog.open(ExampleDialog);\n    }\n}\n                </code>\n            </pre> </section> <section class=\"mt-5 mb-1\"> <h5 class=\"border-0 mb-0\"> {{getText('HOW_USE.LISTENERS.TITLE')}} </h5> <p [html]=\"getText('HOW_USE.LISTENERS.TEXT')\"></p> <pre>\n                <code class=language-javascript>\nimport { Page, PreparePage } from '@nimble-ts/core/page';\nimport { ExampleDialog } from 'src/app/dialogs/example/example.dialog';\n\n@PreparePage({\n    template: require('./example.page.html'),\n    style: require('./example.page.scss')\n})\nexport class ExamplePage extends Page {\n\n    constructor(\n        private dialog: DialogBuilder\n    ) {\n        super();\n    }\n\n    public openMyDialog() {\n        let dialogRef = this.dialog.open(ExampleDialog);\n        dialogRef.onOpen.then(() => {\n            console.log('Is opened!');       \n        });\n        dialogRef.onClose.then(() => {\n            console.log('Is closed!');       \n        });\n    }\n}\n                </code>\n            </pre> </section> <section class=\"mt-5 mb-1\"> <h5 class=\"border-0 mb-0\"> {{getText('HOW_USE.CONFIG.TITLE')}} </h5> <p [html]=\"getText('HOW_USE.CONFIG.TEXT')\"></p> <section class=mt-4> <h6 class=\"border-0 mb-0 pb-2\"> 01 - {{getText('HOW_USE.CONFIG.STEP_1.TITLE')}} </h6> <p [html]=\"getText('HOW_USE.CONFIG.STEP_1.TEXT')\"></p> <pre>\n                    <code class=language-javascript>\nexport class DialogOpenConfig {\n    // {{getText('HOW_USE.CONFIG.STEP_1.DATA')}}\n    data?: any;\n\n    // {{getText('HOW_USE.CONFIG.STEP_1.WIDTH')}}\n    width?: string;\n\n    // {{getText('HOW_USE.CONFIG.STEP_1.MAX_WIDTH')}}\n    maxWidth?: string;\n\n    // {{getText('HOW_USE.CONFIG.STEP_1.MIN_WIDTH')}}\n    minWidth?: string;\n}\n                    </code>\n                </pre> </section> <section class=mt-4> <h6 class=\"border-0 mb-0 pb-2\"> 02 - {{getText('HOW_USE.CONFIG.STEP_2.TITLE')}} </h6> <p [html]=\"getText('HOW_USE.CONFIG.STEP_2.TEXT')\"></p> <pre>\n                    <code class=language-javascript>\nimport { Page, PreparePage } from '@nimble-ts/core/page';\nimport { ExampleDialog } from 'src/app/dialogs/example/example.dialog';\n\n@PreparePage({\n    template: require('./example.page.html'),\n    style: require('./example.page.scss')\n})\nexport class ExamplePage extends Page {\n\n    constructor(\n        private dialog: DialogBuilder\n    ) {\n        super();\n    }\n\n    public openMyDialog() {\n        let dialogRef = this.dialog.open(ExampleDialog, {\n            data: 'My custom data to ExampleDialog :)'\n        });\n    }\n}\n                    </code>\n                </pre> </section> <section class=mt-4> <h6 class=\"border-0 mb-0 pb-2\"> 03 - {{getText('HOW_USE.CONFIG.STEP_3.TITLE')}} </h6> <p [html]=\"getText('HOW_USE.CONFIG.STEP_3.TEXT')\"></p> <pre>\n                    <code class=language-javascript>\nimport { Dialog, PrepareDialog, DIALOG_REF, DialogRef } from '@nimble-ts/core/dialog';\nimport { Inject } from '@nimble-ts/core/inject';\n\n@PrepareDialog({\n    template: require('./example.dialog.html'),\n    style: require('./example.dialog.scss')\n})\nexport class ExampleDialog extends Dialog {\n\n    public myCustomData: string;\n\n    constructor(\n        @Inject(DIALOG_REF) public dialogRef: DialogRef&lt;ExampleDialog&gt;\n    ) {\n        super();\n        this.myCustomData = this.dialogRef.data;\n    }\n\n    onOpen() {\n        console.log(this.myCustomData);\n    }\n\n    onClose() {\n    }\n}\n                    </code>\n                </pre> </section> </section> <section class=\"mt-5 mb-1\"> <h5 class=\"border-0 mb-0\"> {{getText('HOW_USE.DATA_CLOSE.TITLE')}} </h5> <p [html]=\"getText('HOW_USE.DATA_CLOSE.TEXT')\"></p> <section class=\"mt-4 pt-1\"> <h6 class=\"border-0 mb-0 pb-2\"> 01 - {{getText('HOW_USE.DATA_CLOSE.STEP_1.TITLE')}} </h6> <p [html]=\"getText('HOW_USE.DATA_CLOSE.STEP_1.TEXT')\"></p> <pre>\n                    <code class=language-javascript>\nimport { Dialog, PrepareDialog, DIALOG_REF, DialogRef } from '@nimble-ts/core/dialog';\nimport { Inject } from '@nimble-ts/core/inject';\n\n@PrepareDialog({\n    template: require('./example.dialog.html'),\n    style: require('./example.dialog.scss')\n})\nexport class ExampleDialog extends Dialog {\n\n    public myCustomData: string;\n\n    constructor(\n        @Inject(DIALOG_REF) public dialogRef: DialogRef&lt;ExampleDialog&gt;\n    ) {\n        super();\n    }\n\n    public ok() {\n        this.dialogRef.close('My custom data when closed!');\n    }\n\n    onOpen() {\n    }\n\n    onClose() {\n    }\n}\n                    </code>\n                </pre> </section> <section class=mt-4> <h6 class=\"border-0 mb-0 pb-2\"> 02 - {{getText('HOW_USE.DATA_CLOSE.STEP_2.TITLE')}} </h6> <p [html]=\"getText('HOW_USE.DATA_CLOSE.STEP_2.TEXT')\"></p> <pre>\n                    <code class=language-javascript>\nimport { Page, PreparePage } from '@nimble-ts/core/page';\nimport { ExampleDialog } from 'src/app/dialogs/example/example.dialog';\n\n@PreparePage({\n    template: require('./example.page.html'),\n    style: require('./example.page.scss')\n})\nexport class ExamplePage extends Page {\n\n    constructor(\n        private dialog: DialogBuilder\n    ) {\n        super();\n    }\n\n    public openMyDialog() {\n        let dialogRef = this.dialog.open(ExampleDialog);\n        dialogRef.onClose.then((data: any) => {\n            console.log(data);       \n        });\n    }\n}\n                    </code>\n                </pre> </section> </section> </section> </div>"},116:function(e,t,n){},60:function(e,t,n){"use strict";n.r(t),n.d(t,"Framework1xDialogsPage",(function(){return d}));var a,o=n(84),l=n(85),s=n(24),r=n(25),i=(a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),c=function(e,t,n,a){var o,l=arguments.length,s=l<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(s=(l<3?o(s):l>3?o(t,n,s):o(t,n))||s);return l>3&&s&&Object.defineProperty(t,n,s),s},p=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},g=function(e,t){return function(n,a){t(n,a,e)}},m=function(e){function t(t){var n=e.call(this)||this;return n.dialogRef=t,n}return i(t,e),t.prototype.onOpen=function(){},t.prototype.onClose=function(){},t=c([Object(l.e)({template:n(113),style:n(114)}),g(0,Object(r.a)(l.a)),p("design:paramtypes",[l.d])],t)}(l.b),u=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function a(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(a.prototype=n.prototype,new a)}}(),T=function(e,t,n,a){var o,l=arguments.length,s=l<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(s=(l<3?o(s):l>3?o(t,n,s):o(t,n))||s);return l>3&&s&&Object.defineProperty(t,n,s),s},E=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=function(e){function t(t,n){var a=e.call(this)||this;return a.lang=t,a.dialog=n,a}return u(t,e),t.prototype.getText=function(e){return this.lang.get("DOC.1x.CONTENT.FRAMEWORK.DIALOGS."+e)},t.prototype.onInit=function(){},t.prototype.openExampleDialog=function(){this.dialog.open(m)},t.prototype.onDestroy=function(){},t=T([Object(o.b)({template:n(115),style:n(116),title:"Dialogs / Document - Nimble"}),E("design:paramtypes",[s.a,l.c])],t)}(o.a)},84:function(e,t,n){"use strict";n.d(t,"a",(function(){return a.a})),n.d(t,"b",(function(){return i}));var a=n(19),o=function(e){Object.assign(this,e)},l=function(e){this.description="",this.keywords="",this.og={},Object.assign(this,e),this.og&&(this.og=new o(this.og))},s=function(e){this.template="",this.style="",this.title="",this.meta={},Object.assign(this,e),this.meta&&(this.meta=new l(this.meta))},r=n(3);n(20);function i(e){return function(t){return e=new s(e),Object.assign(t.prototype,e),Reflect.defineMetadata(r.a,!0,t),t}}},85:function(e,t,n){"use strict";n.d(t,"b",(function(){return a.a})),n.d(t,"c",(function(){return l.b})),n.d(t,"a",(function(){return l.a})),n.d(t,"d",(function(){return s.a})),n.d(t,"e",(function(){return i}));var a=n(38),o=function(e){this.template="",this.style="",Object.assign(this,e)},l=n(41),s=n(39),r=n(3);function i(e){return function(t){return e=new o(e),Object.assign(t.prototype,e),Reflect.defineMetadata(r.a,!0,t),t}}}}]);