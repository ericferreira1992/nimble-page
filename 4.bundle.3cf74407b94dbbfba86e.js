(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{122:function(a,e){a.exports='<div class=cli-1x-commands-page> <h1> {{getText(\'TITLE\')}} </h1> <p class=mt-3 [html]="getText(\'TEXT_1\')"></p> <pre class=language-shell>\n        <code>\n$ nb\n        </code>\n    </pre> <p [html]="getText(\'TEXT_2\')"></p> <section> <h4> <a href=#generate name=generate [html]="getText(\'GENERATE.TITLE\')"></a> </h4> <p [html]="getText(\'GENERATE.TEXT_1\')" class=mb-3></p> <p [html]="getText(\'GENERATE.TEXT_2\')"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:gray>(Use arrow keys)</span><br>\n<span style=color:#0ff>❯ Generate </span><br>\n<span class=pl-3 style=color:#afafaf> Run server</span><br>\n<span class=pl-3 style=color:#afafaf> Run build </span><br>\n<span class=pl-3 style=color:#afafaf> Exit </span>\n            </code>\n        </pre> <p [html]="getText(\'GENERATE.TEXT_3\')"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:gray>(Use arrow keys)</span><br>\n<span class=pl-3>Page</span><br>\n<span class=pl-3>Dialog</span><br>\n<span class=pl-3>Directive</span><br>\n<span class=pl-3>Service</span><br>\n            </code>\n        </pre> <section class=pl-3> <h5> <a href=#generate-page name=generate-page [html]="getText(\'GENERATE.PAGE.TITLE\')"></a> </h5> <p [html]="getText(\'GENERATE.PAGE.TEXT_1\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:gray>(Use arrow keys)</span><br>\n<span style=color:#0ff>❯ Page</span><br>\n<span class=pl-3 style=color:#afafaf>Dialog</span><br>\n<span class=pl-3 style=color:#afafaf>Directive</span><br>\n<span class=pl-3 style=color:#afafaf>Service</span><br>\n<span class=pl-3 style=color:#afafaf>Guard</span>\n                </code>\n            </pre> <p class=mt-1 [html]="getText(\'GENERATE.PAGE.TEXT_2\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:#0ff>Page</span><br>\n? What is path and name? <span class=pl-1 style=color:#afafaf>(ex.: pages/home)</span> <span class="ml-1 terminal-io"></span>\n                </code>\n            </pre> <p class=mt-1 [html]="getText(\'GENERATE.PAGE.TEXT_3\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:#0ff>Page</span><br>\n? What is path and name? <span class=pl-1 style=color:#afafaf>(ex.: pages/home)</span> <span class=pl-1 style=color:#0ff>pages/example</span><br>\n<span class=pr-1 style=color:#8fbc8f>CREATED:</span> src/app/pages/example/example.page.html<br>\n<span class=pr-1 style=color:#8fbc8f>CREATED:</span> src/app/pages/example/example.page.scss<br>\n<span class=pr-1 style=color:#8fbc8f>CREATED:</span> src/app/pages/example/example.page.ts<br>\n                </code>\n            </pre> </section> <section class=pl-3> <h5> <a href=#generate-dialog name=generate-dialog [html]="getText(\'GENERATE.DIALOG.TITLE\')"></a> </h5> <p [html]="getText(\'GENERATE.DIALOG.TEXT_1\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:gray>(Use arrow keys)</span><br>\n  <span class=pl-3 style=color:#afafaf>Page</span><br>\n<span style=color:#0ff>❯ Dialog</span><br>\n  <span class=pl-3 style=color:#afafaf>Directive</span><br>\n  <span class=pl-3 style=color:#afafaf>Service</span><br>\n  <span class=pl-3 style=color:#afafaf>Guard</span>\n                </code>\n            </pre> <p class=mt-1 [html]="getText(\'GENERATE.DIALOG.TEXT_2\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:#0ff>Dialog</span><br>\n? What is path and name? <span class=pl-1 style=color:#afafaf>(ex.: dialogs/confirmation)</span> <span class="ml-1 terminal-io"></span>\n                </code>\n            </pre> <p class=mt-1 [html]="getText(\'GENERATE.DIALOG.TEXT_3\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:#0ff>Page</span><br>\n? What is path and name? <span class=pl-1 style=color:#afafaf>(ex.: dialogs/confirmation)</span> <span class=ml-1 style=color:#0ff>dialogs/example</span><br>\n<span class=pl-1 style=color:#8fbc8f>CREATED:</span> src/app/dialogs/example/example.dialog.html<br>\n<span class=pl-1 style=color:#8fbc8f>CREATED:</span> src/app/dialogs/example/example.dialog.scss<br>\n<span class=pl-1 style=color:#8fbc8f>CREATED:</span> src/app/dialogs/example/example.dialog.ts<br>\n                </code>\n            </pre> </section> <section class=pl-3> <h5> <a href=#generate-directive name=generate-directive [html]="getText(\'GENERATE.DIRECTIVE.TITLE\')"></a> </h5> <p [html]="getText(\'GENERATE.DIRECTIVE.TEXT_1\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:gray>(Use arrow keys)</span><br>\n<span class=pl-3 style=color:#afafaf>Page</span><br>\n<span class=pl-3 style=color:#afafaf>Dialog</span><br>\n<span style=color:#0ff>❯ Directive</span>\n<span class=pl-3 style=color:#afafaf>Service</span><br>\n<span class=pl-3 style=color:#afafaf>Guard</span><br>\n                </code>\n            </pre> <p class=mt-1 [html]="getText(\'GENERATE.DIRECTIVE.TEXT_2\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:#0ff>Directive</span><br>\n? What is path and name? <span class=pl-1 style=color:#afafaf>(ex.: directives/tooltip)</span> <span class="ml-1 terminal-io"></span>\n                </code>\n            </pre> <p class=mt-1 [html]="getText(\'GENERATE.DIRECTIVE.TEXT_3\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:#0ff>Directive</span><br>\n? What is path and name? <span class=pl-1 style=color:#afafaf>(ex.: directives/tooltip)</span> <span class=pl-1 style=color:#0ff>directives/example</span><br>\n<span class=pr-1 style=color:#8fbc8f>CREATED:</span> src/app/directives/example/example.directive.html<br>\n<span class=pr-1 style=color:#8fbc8f>CREATED:</span> src/app/directives/example/example.directive.scss<br>\n<span class=pr-1 style=color:#8fbc8f>CREATED:</span> src/app/directives/example/example.directive.ts\n                </code>\n            </pre> </section> <section class=pl-3> <h5> <a href=#generate-directive name=generate-directive [html]="getText(\'GENERATE.DIRECTIVE.TITLE\')"></a> </h5> <p [html]="getText(\'GENERATE.DIRECTIVE.TEXT_1\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:gray>(Use arrow keys)</span><br>\n<span class=pl-3 style=color:#afafaf>Page</span><br>\n<span class=pl-3 style=color:#afafaf>Dialog</span><br>\n<span style=color:#0ff>❯ Directive</span><br>\n<span class=pl-3 style=color:#afafaf>Service</span><br>\n<span class=pl-3 style=color:#afafaf>Guard</span>\n                </code>\n            </pre> <p class=mt-1 [html]="getText(\'GENERATE.DIRECTIVE.TEXT_2\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:#0ff>Directive</span><br>\n? What is path and name? <span class=pl-1 style=color:#afafaf>(ex.: directives/tooltip)</span> <span class="ml-1 terminal-io"></span>\n                </code>\n            </pre> <p class=mt-1 [html]="getText(\'GENERATE.DIRECTIVE.TEXT_3\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:#0ff>Directive</span><br>\n? What is path and name? <span class=pl-1 style=color:#afafaf>(ex.: directives/tooltip)</span> <span class=pl-1 style=color:#0ff>directives/example</span><br>\n<span class=pr-1 style=color:#8fbc8f>CREATED:</span> src/app/directives/example.directive.ts\n                </code>\n            </pre> </section> <section class=pl-3> <h5> <a href=#generate-service name=generate-service [html]="getText(\'GENERATE.SERVICE.TITLE\')"></a> </h5> <p [html]="getText(\'GENERATE.SERVICE.TEXT_1\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:gray>(Use arrow keys)</span><br>\n  <span class=pl-3 style=color:#afafaf>Page</span><br>\n  <span class=pl-3 style=color:#afafaf>Dialog</span><br>\n  <span class=pl-3 style=color:#afafaf>Directive</span><br>\n<span style=color:#0ff>❯ Service</span><br>\n  <span class=pl-3 style=color:#afafaf>Guard</span>\n                </code>\n            </pre> <p class=mt-1 [html]="getText(\'GENERATE.SERVICE.TEXT_2\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:#0ff>Service</span><br>\n? What is path and name? <span class=pl-1 style=color:#afafaf>(ex.: directives/tooltip)</span> <span class="ml-1 terminal-io"></span><br>\n                </code>\n            </pre> <p class=mt-1 [html]="getText(\'GENERATE.SERVICE.TEXT_3\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:#0ff>Service</span><br>\n? What is path and name? <span class=pl-1 style=color:#afafaf>(ex.: services/tooltip)</span> <span class=pl-1 style=color:#0ff>services/example</span><br>\n<span class=pr-1 style=color:#8fbc8f>CREATED:</span> src/app/services/example.service.ts\n                </code>\n            </pre> </section> <section class=pl-3> <h5> <a href=#generate-guard name=generate-guard [html]="getText(\'GENERATE.GUARD.TITLE\')"></a> </h5> <p [html]="getText(\'GENERATE.GUARD.TEXT_1\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span style=color:gray>(Use arrow keys)</span><br>\n<span class=pl-3 style=color:#afafaf>Page</span><br>\n<span class=pl-3 style=color:#afafaf>Dialog</span><br>\n<span class=pl-3 style=color:#afafaf>Directive</span><br>\n<span class=pl-3 style=color:#afafaf>Service</span><br>\n<span style=color:#0ff>❯ Guard</span>\n                </code>\n            </pre> <p class=mt-1 [html]="getText(\'GENERATE.GUARD.TEXT_2\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:#0ff>Guard</span><br>\n? What is path and name? <span class=pl-1 style=color:#afafaf>(ex.: route-guards/auth)</span> <span class="ml-1 terminal-io"></span>\n                </code>\n            </pre> <p class=mt-1 [html]="getText(\'GENERATE.GUARD.TEXT_3\')"></p> <pre class=language-shell>\n                <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Generate</span><br>\n? Which what do you want to generate? <span class=pl-1 style=color:#0ff>Guard</span><br>\n? What is path and name? <span class=pl-1 style=color:#afafaf>(ex.: route-guards/auth)</span> <span class=pl-1 style=color:#0ff>route-guards/auth</span><br>\n<spa class=pr-1 n style=color:#8fbc8f>CREATED: src/app/route-guards/auth.guard.ts\n                </spa></code>\n            </pre> </section> </section> <section> <h4> <a href=#server name=server [html]="getText(\'SERVER.TITLE\')"></a> </h4> <p [html]="getText(\'SERVER.TEXT_1\')"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span style=color:gray>(Use arrow keys)</span><br>\n<span class=pl-3 style=color:#afafaf>Generate </span><br>\n<span style=color:#0ff>❯ Run server</span><br>\n<span class=pl-3 style=color:#afafaf>Run build </span><br>\n<span class=pl-3 style=color:#afafaf>Exit </span>\n            </code>\n        </pre> <p [html]="getText(\'SERVER.TEXT_2\')"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Run server</span><br>\t\n❯ Nimble project is running at <span class=pl-1 style=color:#ff0>http://0.0.0.0:8090/</span> <span class=pl-1 style=color:gray>(open in your browser)</span><br>\n❯ Environment from: <span class=pl-1 style=color:#ff0>src/environments/env.local</span><br>\n<br>\n<span style=color:#0ff>❯ Await, starting the server...</span>\n            </code>\n        </pre> </section> <section> <h4> <a href=#build name=build [html]="getText(\'BUILD.TITLE\')"></a> </h4> <p [html]="getText(\'BUILD.TEXT_1\')"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:gray>(Use arrow keys)</span><br>\n<span class=pl-3 style=color:#afafaf>Generate </span><br>\n<span class=pl-3 style=color:#afafaf>Run server</span><br>\n<span style=color:#0ff>❯ Run build</span><br>\n<span class=pl-3 style=color:#afafaf>Exit </span>\n            </code>\n        </pre> <p [html]="getText(\'BUILD.TEXT_2\')"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Run build</span><br>\n? Select the environment to be used: <span class=pl-1 style=color:gray>(Use arrow keys)</span><br>\n<span style=color:#0ff>❯ local</span><br>\n<span class=pl-3 style=color:#afafaf>dev</span><br>\n<span class=pl-3 style=color:#afafaf>prod</span>\n            </code>\n        </pre> <p [html]="getText(\'BUILD.TEXT_3\')"></p> <pre class=language-shell>\n            <code>\n$ nb\n? Select what do you want: <span class=pl-1 style=color:#0ff>Run build</span><br>\n? Select the environment to be used: <span class=pl-1 style=color:#0ff>local</span><br>\n<br>\n❯ Environment from: <span class=pl-1 style=color:#ff0>src/environments/env.local</span><br>\n<span style=color:#0ff>❯ Await, starting the server...</span><br>\n<br>\n<span style=color:#8fbc8f>✔ Compiled successfully!</span><br>\n<br>\n❯ Directory where the build is: <span class=pl-1 style=color:#ff0>your-project/build</span>\n            </code>\n        </pre> <p [html]="getText(\'BUILD.TEXT_4\')"></p> </section> </div>'},123:function(a,e,s){},55:function(a,e,s){"use strict";s.r(e),s.d(e,"Cli1xCommandsPage",(function(){return c}));var n,l=s(80),t=s(24),p=(n=function(a,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,e){a.__proto__=e}||function(a,e){for(var s in e)e.hasOwnProperty(s)&&(a[s]=e[s])})(a,e)},function(a,e){function s(){this.constructor=a}n(a,e),a.prototype=null===e?Object.create(e):(s.prototype=e.prototype,new s)}),o=function(a,e,s,n){var l,t=arguments.length,p=t<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,s):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(a,e,s,n);else for(var o=a.length-1;o>=0;o--)(l=a[o])&&(p=(t<3?l(p):t>3?l(e,s,p):l(e,s))||p);return t>3&&p&&Object.defineProperty(e,s,p),p},r=function(a,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(a,e)},c=function(a){function e(e){var s=a.call(this)||this;return s.lang=e,s}return p(e,a),e.prototype.getText=function(a){return this.lang.get("DOC.1x.CONTENT.CLI.INTERACTIVE_COMMANDS."+a)},e.prototype.onEnter=function(){},e.prototype.onExit=function(){},e=o([Object(l.b)({template:s(122),style:s(123),title:"CLI / Interactive commands - Nimble"}),r("design:paramtypes",[t.a])],e)}(l.a)},80:function(a,e,s){"use strict";s.d(e,"a",(function(){return n.a})),s.d(e,"b",(function(){return r}));var n=s(19),l=function(a){Object.assign(this,a)},t=function(a){this.description="",this.keywords="",this.og={},Object.assign(this,a),this.og&&(this.og=new l(this.og))},p=function(a){this.template="",this.style="",this.title="",this.meta={},Object.assign(this,a),this.meta&&(this.meta=new t(this.meta))},o=s(2);s(20);function r(a){return function(e){return a=new p(a),Object.assign(e.prototype,a),Reflect.defineMetadata(o.a,!0,e),e}}}}]);